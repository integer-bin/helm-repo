name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
    paths-ignore:
      - '.github/workflows/**'
      - 'yaml/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set env
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          echo "RELEASE_VERSION=$COMMIT_MESSAGE" >> $GITHUB_ENV

      - name: Update Commit Message to Secrets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: ${{ env.RELEASE_VERSION }}
        run: |
          curl -X PUT -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"encrypted_value":"'$COMMIT_MESSAGE'"}' \
          https://api.github.com/repos/OWNER/REPO/actions/secrets/COMMIT_MESSAGE


      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"
          cache: "gradle"

      - name: chmod gradle
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build --no-daemon

      - name: check build
        run: ls ./build/libs

      - name: check docker ps
        run: docker ps

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: docker build
        run: |
          ls -al
          pwd
          cp ./build/libs/*.war ./Dockerfile/
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/cicd:${{ env.RELEASE_VERSION }} ./Dockerfile
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/cicd:latest ./Dockerfile


      - name: docker images check
        run: docker images

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: docer push
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cicd:${{ env.RELEASE_VERSION }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/cicd:latest        

      # - name: Get EKS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-2
      

      - name: Check build/libs directory for WAR file
        run: ls -l ./build/libs

      # - name: Upload WAR to S3
      #   run: |
      #     aws s3 cp ./build/libs/*.war s3://cicdlab-test01/${{ env.RELEASE_VERSION }}/

